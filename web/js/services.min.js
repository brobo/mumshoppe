angular.module('service.accent-bow', [])
	.factory('AccentBowService', ['$http', function($http) {
		return {

			findAll: function() {
				return $http.get('api/accentbow');
			},
			create: function(bow) {
				return $http.post('api/accentbow/', bow);
			},
			update: function(id, bow) {
				return $http.put('api/accentbow/' + id, bow);
			},
			delete: function(id) {
				return $http.delete('api/accentbow/' + id);
			},
			uploadImage: function(id, image) {
				var fd = new FormData();
				fd.append('file', image);
				return $http.post('api/accentbow/' + id + '/image', fd, {
					transformRequest: angular.identity,
					headers: {'Content-Type': undefined}
				});
			},
			imageUrl: function(id) {
				return 'api/accentbow/' + id + '/image';
			}
		};
	}]);

angular.module('service.accessory', [])
	.factory('AccessoryService', ['$http', function($http) {

		return {
			findAll: function() {
				return $http.get('api/accessory');
			},
			create: function(accessory) {
				return $http.post('api/accessory/', accessory);
			},
			update: function(id, accessory) {
				return $http.put('api/accessory/' + id, accessory);
			},
			delete: function(id) {
				return $http.delete('api/accessory/' + id);
			},
			uploadImage: function(id, image) {
				var fd = new FormData();
				fd.append('file', image);
				return $http.post('api/accessory/' + id + '/image', fd, {
					transformRequest: angular.identity,
					headers: {'Content-Type': undefined}
				});
			},
			imageUrl: function(id) {
				return 'api/accessory/' + id + '/image';
			}
		};
		
	}]);

angular.module('service.alert', [])
	.factory('AlertService', ['$rootScope', function($rootScope) {
		$rootScope.alerts = [];
		var alertsService = {
			add: function(type, message) {
				$rootScope.alerts.splice(0, 0, {
					type: type,
					message: message,
					close: function() {
						return alertsService.close(this);
					}
				});
				return $rootScope.alerts[0];
			},
			close: function(alert) {
				var index = $rootScope.alerts.indexOf(alert);
				return $rootScope.alerts.splice(index, 1);
			},
			clear: function() {
				$rootScope.alerts = [];
			}
		};
		return alertsService;
	}]);

angular.module('service.backing', [])
	.factory('BackingService', ['$http', function($http) {

		return {

			findAll: function() {
				return $http.get('api/backing');
			},
			create: function(backing) {
				return $http.post('api/backing/', backing);
			},
			update: function(id, backing) {
				return $http.put('api/backing/' + id, backing);
			},
			delete: function(id) {
				return $http.delete('api/backing/' + id);
			},
			imageUrl: function(id) {
				return 'api/backing/' + id + '/image';
			},
			uploadImage: function(id, image) {
				var fd = new FormData();
				fd.append('file', image);
				return $http.post('api/backing/' + id + '/image', fd, {
					transformRequest: angular.identity,
					headers: {'Content-Type': undefined}
				});
			}

		};

	}]);

angular.module('service.bear', [])
	.factory('BearService', ['$http', function($http) {

		return {
			findAll: function() {
				return $http.get('api/bear');
			},
			create: function(bear) {
				return $http.post('api/bear/', bear);
			},
			update: function(id, bear) {
				return $http.put('api/bear/' + id, bear);
			},
			delete: function(id) {
				return $http.delete('api/bear/' + id);
			},
			uploadImage: function(id, image) {
				var fd = new FormData();
				fd.append('file', image);
				return $http.post('api/bear/' + id + '/image', fd, {
					transformRequest: angular.identity,
					headers: {'Content-Type': undefined}
				});
			},
			imageUrl: function(id) {
				return 'api/bear/' + id + '/image';
			}
		};

	}]);

angular.module('service.category', [])
	.factory('CategoryService', ['$http', function($http) {
		
		return {
			findAll: function() {
				return $http.get('api/category');
			},
			create: function(category) {
				return $http.post('api/category/', category);
			},
			update: function(id, category) {
				return $http.put('api/category/' + id, category);
			},
			delete: function(id) {
				return $http.delete('api/category/' + id);
			}
		}

	}]);

angular.module('service.group', [])
	.factory('GroupService', ['$http', function($http) {

		return {

			findAll: function() {
				return $http.get('api/group');
			},
			create: function(group) {
				return $http.post('api/group/', group);
			},
			update: function(id, group) {
				return $http.put('api/group/' + id, group);
			},
			delete: function(id) {
				return $http.delete('api/group/' + id);
			}

		}

	}]);
angular.module('manage.service.image-edit', [])
	.factory('ImageEditService', [
	'$http', 
	'$modal',
	function($http, $modal) {

		return {
			open: function(imageUrl, uploadAction) {
				return $modal.open({
					size: 'small',
					controller: 'ImageEditController',
					templateUrl: 'res/image-edit.html',
					resolve: {
						imageUrl: function() { return imageUrl; },
						uploadAction: function() { return uploadAction; }
					}
				});
			}
		}

	}]);

angular.module('service.letter', [])
	.factory('LetterService', ['$http', function($http) {
		
		return {
			findAll: function() {
				return $http.get('api/letter');
			},
			create: function(letter) {
				return $http.post('api/letter/', letter);
			},
			update: function(id, letter) {
				return $http.put('api/letter/' + id, letter);
			},
			delete: function(id) {
				return $http.delete('api/letter/' + id);
			}
		}
	}]);
angular.module('service.mum', [])
	.factory('MumService', ['$http', function($http) {

		return {
			findAll: function() {
				return $http.get('api/mum');
			},
			create: function(mum) {
				return $http.post('api/mum/', mum);
			},
			update: function(id, mum) {
				return $http.put('api/mum/' + id, mum);
			},
			delete: function(id) {
				return $http.delete('api/mum/' + id);
			}
		}

	}]);

angular.module('service.product', [])
	.factory('ProductService', ['$http', function($http) {
		return {

			findAll: function() {
				return $http.get('api/product');
			},
			create: function(product) {
				return $http.post('api/product/', product);
			},
			update: function(id, product) {
				return $http.put('api/product/' + id, product);
			},
			delete: function(id) {
				return $http.delete('api/product/' + id);
			}

		}
	}]);

angular.module('service.really', [])
	.factory('ReallyService', ['$modal', function($modal) {
		var defaults = {
			head: 'Really?',
			body: 'Please confirm that this something you want to do.',
			yes: 'OK',
			no: 'Cancel'
		};
		return {
			prompt: function(data, callback) {
				for (attr in defaults) {
					data[attr] = data[attr] || defaults[attr];
				}

				return modalInstance = $modal.open({
					templateUrl: 'really.html',
					controller: 'ReallyController',
					resolve: {
						data: function() { return data; },
						callback: function() { return callback; }
					}
				});
			}
		};
	}]);

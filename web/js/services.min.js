angular.module('service.accent-bow', [])
.factory('AccentBowService', ['$http', function($http) {

	function returnData(res) {
		return res.data;
	}

	return {
		findAll: function() {
			return $http.get('api/accentbow').then(returnData);
		},
		create: function(bow) {
			return $http.post('api/accentbow/', bow).then(returnData);
		},
		update: function(id, bow) {
			return $http.put('api/accentbow/' + id, bow).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/accentbow/' + id).then(returnData);
		},
		uploadImage: function(id, image) {
			var fd = new FormData();
			fd.append('file', image);
			return $http.post('api/accentbow/' + id + '/image', fd, {
				transformRequest: angular.identity,
				headers: {'Content-Type': undefined}
			}).then(returnData);
		},
		imageUrl: function(id) {
			return 'api/accentbow/' + id + '/image';
		}
	};
}]);

angular.module('service.accessory-association', [])
.factory('AccessoryAssociationService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {
		create: function(association) {
			return $http.post('api/association/', association).then(returnData);
		},
		update: function(id, association) {
			return $http.put('api/association/' + id, association).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/association/' + id).then(returnData);
		}
	};

}]);

angular.module('service.accessory', [])
.factory('AccessoryService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {
		findAll: function() {
			return $http.get('api/accessory').then(returnData);
		},
		create: function(accessory) {
			return $http.post('api/accessory/', accessory).then(returnData);
		},
		update: function(id, accessory) {
			return $http.put('api/accessory/' + id, accessory).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/accessory/' + id).then(returnData);
		},
		uploadImage: function(id, image) {
			var fd = new FormData();
			fd.append('file', image);
			return $http.post('api/accessory/' + id + '/image', fd, {
				transformRequest: angular.identity,
				headers: {'Content-Type': undefined}
			}).then(returnData);
		},
		imageUrl: function(id) {
			return 'api/accessory/' + id + '/image';
		}
	};
	
}]);

angular.module('service.alert', [])
.factory('AlertService', ['$rootScope', function($rootScope) {
	$rootScope.alerts = [];
	var alertsService = {
		add: function(type, message) {
			$rootScope.alerts.splice(0, 0, {
				type: type,
				message: message,
				close: function() {
					return alertsService.close(this);
				}
			});
			return $rootScope.alerts[0];
		},
		close: function(alert) {
			var index = $rootScope.alerts.indexOf(alert);
			return $rootScope.alerts.splice(index, 1);
		},
		clear: function() {
			$rootScope.alerts = [];
		}
	};
	return alertsService;
}]);

angular.module('service.backing', [])
.factory('BackingService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {

		findAll: function() {
			return $http.get('api/backing').then(returnData);
		},
		create: function(backing) {
			return $http.post('api/backing/', backing).then(returnData);
		},
		update: function(id, backing) {
			return $http.put('api/backing/' + id, backing).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/backing/' + id).then(returnData);
		},
		imageUrl: function(id) {
			return 'api/backing/' + id + '/image';
		},
		uploadImage: function(id, image) {
			var fd = new FormData();
			fd.append('file', image);
			return $http.post('api/backing/' + id + '/image', fd, {
				transformRequest: angular.identity,
				headers: {'Content-Type': undefined}
			}).then(returnData);
		}

	};

}]);

angular.module('service.bear', [])
.factory('BearService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {
		findAll: function() {
			return $http.get('api/bear').then(returnData);
		},
		create: function(bear) {
			return $http.post('api/bear/', bear).then(returnData);
		},
		update: function(id, bear) {
			return $http.put('api/bear/' + id, bear).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/bear/' + id).then(returnData);
		},
		uploadImage: function(id, image) {
			var fd = new FormData();
			fd.append('file', image);
			return $http.post('api/bear/' + id + '/image', fd, {
				transformRequest: angular.identity,
				headers: {'Content-Type': undefined}
			}).then(returnData);
		},
		imageUrl: function(id) {
			return 'api/bear/' + id + '/image';
		}
	};

}]);

angular.module('service.category', [])
.factory('CategoryService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}
	
	return {
		findAll: function() {
			return $http.get('api/category').then(returnData);
		},
		create: function(category) {
			return $http.post('api/category/', category).then(returnData);
		},
		update: function(id, category) {
			return $http.put('api/category/' + id, category).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/category/' + id).then(returnData);
		}
	}

}]);

angular.module('service.customer', [])
.factory('CustomerService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {
		register: function(customer) {
			return $http.post('api/customer/', customer).then(returnData);
		},
		login: function(customer) {
			return $http.put('api/customer/login', customer).then(returnData);
		}
	};

}]);

angular.module('service.group', [])
.factory('GroupService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {

		findAll: function() {
			return $http.get('api/group').then(returnData);
		},
		create: function(group) {
			return $http.post('api/group/', group).then(returnData);
		},
		update: function(id, group) {
			return $http.put('api/group/' + id, group).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/group/' + id).then(returnData);
		}

	}

}]);
angular.module('manage.service.image-edit', [])
.factory('ImageEditService', [
'$http', 
'$modal',
function($http, $modal) {

	return {
		open: function(imageUrl, uploadAction) {
			return $modal.open({
				size: 'small',
				controller: 'ImageEditController',
				templateUrl: 'res/image-edit.html',
				resolve: {
					imageUrl: function() { return imageUrl; },
					uploadAction: function() { return uploadAction; }
				}
			});
		}
	}

}]);

angular.module('service.letter', [])
.factory('LetterService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}
	
	return {
		findAll: function() {
			return $http.get('api/letter').then(returnData);
		},
		create: function(letter) {
			return $http.post('api/letter/', letter).then(returnData);
		},
		update: function(id, letter) {
			return $http.put('api/letter/' + id, letter).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/letter/' + id).then(returnData);
		}
	}
}]);
angular.module('service.mum', [])
.factory('MumService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {
		findAll: function() {
			return $http.get('api/mum').then(returnData);
		},
		findById: function(id) {
			return $http.get('api/mum/' + id).then(returnData);
		},
		create: function(mum) {
			return $http.post('api/mum/', mum).then(returnData);
		},
		update: function(id, mum) {
			return $http.put('api/mum/' + id, mum).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/mum/' + id).then(returnData);
		}
	}

}]);

angular.module('service.order', [])
.factory('OrderService', ['$http', '$cookies', function($http, $cookies) {

	function returnData(response) {
		return response.data;
	}

	return {
		findById: function(id) {
			return $http.get('api/order/' + id).then(returnData);
		},
		create: function(customerId, mumId) {
			return $http.post('api/order/' + customerId + '/' + mumId).then(returnData);
		},
		beginPayFlow: function(orderId) {
			return $http.get('api/order/' + orderId + '/pay').then(returnData).then(function(data) {
				$cookies.put('access_token', 'Bearer ' + data.access_token.access_token);
				$cookies.put('payment_id', data.payment_id);
				return data;
			});
		},
		endPayFlow: function(orderId, payerId) {
			return $http.post('api/order/' + orderId + '/pay/', {
				payer_id: payerId,
				access_token: $cookies.get('access_token'),
				payment_id: $cookies.get('payment_id')
			}).then(returnData).then(function(data) {
				$cookies.remove('access_token');
				$cookies.remove('payment_id');
				return data;
			});
		}
	};

}]);

angular.module('service.product', [])
.factory('ProductService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {

		findAll: function() {
			return $http.get('api/product').then(returnData);
		},
		create: function(product) {
			return $http.post('api/product/', product).then(returnData);
		},
		update: function(id, product) {
			return $http.put('api/product/' + id, product).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/product/' + id).then(returnData);
		}

	}
}]);

angular.module('service.really', [])
.factory('ReallyService', ['$modal', function($modal) {
	var defaults = {
		head: 'Really?',
		body: 'Please confirm that this something you want to do.',
		yes: 'OK',
		no: 'Cancel'
	};
	return {
		prompt: function(data, callback) {
			for (attr in defaults) {
				data[attr] = data[attr] || defaults[attr];
			}

			return modalInstance = $modal.open({
				templateUrl: 'really.html',
				controller: 'ReallyController',
				resolve: {
					data: function() { return data; },
					callback: function() { return callback; }
				}
			});
		}
	};
}]);

angular.module('service.ribbon', [])
.factory('RibbonService', ['$http', function($http) {

	function returnData(response) {
		return response.data;
	}

	return {
		findById: function(id) {
			return $http.get('api/ribbon/' + id).then(returnData);
		},
		create: function(ribbon) {
			return $http.post('api/ribbon/', ribbon).then(returnData);
		},
		update: function(id, ribbon) {
			return $http.put('api/ribbon/' + id, ribbon).then(returnData);
		},
		delete: function(id) {
			return $http.delete('api/ribbon/' + id).then(returnData);
		}
	};

}]);
